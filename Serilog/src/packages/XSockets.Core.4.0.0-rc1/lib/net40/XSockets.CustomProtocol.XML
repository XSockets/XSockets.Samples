<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XSockets.CustomProtocol</name>
    </assembly>
    <members>
        <member name="T:XSockets.CustomProtocol.JsonProtocol">
            <summary>
            A really simple/stupid protocol for JSON.
            The magic here is that clients connected to this protocol (TelNet, Arduino, Netduino or whatever) will be able
            to communicate cross-protocol with client talking RFC6455 for example (or any other implemented protocol).    
            </summary>
        </member>
        <member name="M:XSockets.CustomProtocol.JsonProtocol.DoHandshake">
            <summary>
            Perform any extra logic for handshake, build a hostresponse etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:XSockets.CustomProtocol.JsonProtocol.CanDoHeartbeat">
            <summary>
            Set to true if your clients connected to this protocol will return pong on ping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XSockets.CustomProtocol.JsonProtocol.NewInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:XSockets.CustomProtocol.JsonProtocol.OnIncomingFrame(System.Collections.Generic.List{System.Byte},XSockets.Core.Common.Socket.Event.Arguments.MessageType)">
            <summary>
            
            </summary>
            <param name="payload"></param>
            <param name="messageType"></param>
            <returns></returns>
        </member>
        <member name="P:XSockets.CustomProtocol.JsonProtocol.GetPathRegex">
            <summary>
            Extract the path (controller name) from the handshake
            </summary>
        </member>
        <member name="P:XSockets.CustomProtocol.JsonProtocol.ProtocolIdentifier">
            <summary>
            A simple identifier fot the protocol since the ProtocolPattern might be complex or unfriendly to read.
            </summary>
        </member>
        <member name="P:XSockets.CustomProtocol.JsonProtocol.ProtocolPattern">
            <summary>
            The string to identify the protocol in the handshake
            </summary>
        </member>
        <member name="P:XSockets.CustomProtocol.JsonProtocol.HostResponse">
            <summary>
            The string to return after handshake
            </summary>
        </member>
    </members>
</doc>
